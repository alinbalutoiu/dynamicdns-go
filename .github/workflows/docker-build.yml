name: Docker-Build

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  docker-build:
    # Name the Job
    name: Build and push
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        GOOS: [linux]
        GOARCH: [amd64, arm, arm64]

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Build
        run: sh scripts/build.sh
        env:
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.${{ matrix.GOARCH }}
          push: true
          platforms: ${{ matrix.GOOS }}/${{ matrix.GOARCH }}
          tags: alinbalutoiu/dynamicdns-go:${{ matrix.GOOS }}-${{ matrix.GOARCH }}

  push-images:
    name: Push manifest with all images
    runs-on: ubuntu-latest
    needs: [docker-build]
    env:
      DOCKER_CONFIG: ~/.docker
    steps:
      - uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Multiarch Image
        run: |
          echo $(jq -c '. + { "experimental": "enabled" }' ${DOCKER_CONFIG}/config.json) > ${DOCKER_CONFIG}/config.json
          tag=$(basename $GITHUB_REF)
          if [ $tag = "master" ]; then
            tag="latest"
          fi
          image_name="alinbalutoiu/dynamicdns-go"
          docker manifest create $image_name:${tag} ${image_name}:linux-arm64 ${image_name}:linux-amd64 ${image_name}:linux-arm

          docker manifest push $image_name:${tag}
